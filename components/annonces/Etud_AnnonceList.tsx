import React, { useState } from "react";
import AnnonceCard from "@/components/annonces/AnnonceCard";
import AnnonceDetail from "@/components/annonces/AnnonceDetail";

type Annonce = {
  id: number;
  title: string;
  content: string;
  fullContent: string;
  author: string;
  date: string;
};

const initialAnnonces: Annonce[] = [
  {
    id: 1,
    title: "üìö Cours de r√©vision avant l'examen",
    content:
      "Des s√©ances de r√©vision sont organis√©es pour mieux vous pr√©parer...",
    fullContent:
      "Des s√©ances de r√©vision auront lieu la semaine pr√©c√©dant les examens. Chaque enseignant proposera des sessions adapt√©es aux besoins des √©tudiants. Consultez votre espace √©tudiant pour voir les cr√©neaux disponibles et vous inscrire. C'est l'occasion id√©ale pour poser des questions et revoir les points cl√©s du programme.",
    author: "Prof. Dupont",
    date: "2025-02-19",
  },
  {
    id: 2,
    title: "‚úçÔ∏è Devoir √† rendre pour la semaine prochaine",
    content:
      "Un devoir est √† rendre avant la date limite, consultez les consignes...",
    fullContent:
      "Les √©tudiants de la fili√®re informatique doivent soumettre leur projet sur les bases de donn√©es avant le 26 f√©vrier. Le travail doit √™tre envoy√© via la plateforme universitaire. Tout retard entra√Ænera une p√©nalit√©. Consultez les consignes d√©taill√©es dans l'espace cours.",
    author: "Prof. Martin",
    date: "2025-02-18",
  },
  {
    id: 3,
    title: "üéôÔ∏è Conf√©rence sur les nouvelles technologies",
    content:
      "Un enseignant invit√© animera une conf√©rence sur les tendances tech...",
    fullContent:
      "Le 5 mars, nous aurons l'honneur d'accueillir un expert en cybers√©curit√© qui donnera une conf√©rence sur les d√©fis actuels et futurs dans ce domaine. La conf√©rence aura lieu en amphith√©√¢tre A et sera suivie d'une session de questions-r√©ponses. Les √©tudiants int√©ress√©s doivent s'inscrire avant le 3 mars.",
    author: "Prof. Lefebvre",
    date: "2025-02-17",
  },
  {
    id: 4,
    title: "üìñ Ressources suppl√©mentaires pour le cours",
    content: "Des documents compl√©mentaires sont disponibles en ligne...",
    fullContent:
      "Suite √† la demande de plusieurs √©tudiants, j‚Äôai mis en ligne des ressources suppl√©mentaires pour approfondir les notions vues en cours. Vous pouvez les consulter sur la plateforme Moodle. N‚Äôh√©sitez pas √† poser vos questions lors des prochaines s√©ances.",
    author: "Prof. Bernard",
    date: "2025-02-16",
  },
  {
    id: 5,
    title: "üìö Examen de fin de semestre",
    content:
      "Les examens d√©buteront bient√¥t. Consultez les horaires et salles...",
    fullContent:
      "Les examens de fin de semestre d√©buteront le 15 mars pour toutes les fili√®res. Consultez vos calendriers pour voir les horaires et les salles affect√©es. Une r√©union d'information aura lieu le 10 mars pour r√©pondre aux questions des √©tudiants. Les √©tudiants doivent √©galement s'assurer d'avoir leur carte universitaire et d'arriver 30 minutes avant le d√©but de l'examen.",
    author: "Administration",
    date: "2025-02-19",
  },
  {
    id: 6,
    title: "üé≠ Inscription aux clubs universitaires",
    content: "Rejoignez un club et participez aux √©v√©nements √† venir...",
    fullContent:
      "Les inscriptions aux clubs sont ouvertes jusqu'au 25 f√©vrier. Chaque club organisera une r√©union d'information pour pr√©senter ses activit√©s. Parmi les clubs disponibles : club de th√©√¢tre, club de robotique, club de photographie et bien d'autres ! Ne manquez pas l'occasion de rencontrer de nouvelles personnes et de participer √† des √©v√©nements enrichissants tout au long de l'ann√©e.",
    author: "Bureau des √©tudiants",
    date: "2025-02-18",
  },
  {
    id: 7,
    title: "ü§ñ Conf√©rence sur l'Intelligence Artificielle",
    content:
      "Une conf√©rence sur l'IA se tiendra bient√¥t avec des experts du domaine...",
    fullContent:
      "Le d√©partement d'informatique organise une conf√©rence exclusive sur l'Intelligence Artificielle le 5 mars prochain. Des experts du domaine viendront parler des derni√®res avanc√©es en machine learning, vision par ordinateur et IA √©thique. Les √©tudiants int√©ress√©s peuvent s'inscrire d√®s maintenant. Un espace sera √©galement pr√©vu pour poser des questions aux conf√©renciers.",
    author: "D√©partement d'Informatique",
    date: "2025-02-17",
  },
  {
    id: 8,
    title: "üìñ Nouvelle biblioth√®que num√©rique",
    content: "Acc√©dez √† des milliers de ressources acad√©miques en ligne...",
    fullContent:
      "La biblioth√®que centrale a r√©cemment mis en place une plateforme num√©rique permettant aux √©tudiants d'acc√©der √† des milliers de livres, articles scientifiques et revues sp√©cialis√©es. Il suffit d'utiliser votre identifiant universitaire pour vous connecter et commencer √† explorer les ressources disponibles. Des ateliers seront √©galement organis√©s pour apprendre √† optimiser vos recherches en ligne.",
    author: "Biblioth√®que Centrale",
    date: "2025-02-16",
  },
];

const AnnonceList: React.FC = () => {
  const [annonces, setAnnonces] = useState<Annonce[]>(initialAnnonces);
  const [selectedAnnonce, setSelectedAnnonce] = useState<Annonce | null>(null);
  const [showForm, setShowForm] = useState(false);
  const [isEditing, setIsEditing] = useState(false);
  const [formAnnonce, setFormAnnonce] = useState<Annonce>({
    id: 0,
    title: "",
    content: "",
    fullContent: "",
    author: "",
    date: new Date().toISOString().split("T")[0],
  });

  const handleAddOrUpdateAnnonce = () => {
    if (isEditing) {
      setAnnonces((prev) =>
        prev.map((a) => (a.id === formAnnonce.id ? formAnnonce : a))
      );
    } else {
      setAnnonces((prev) => [...prev, { ...formAnnonce, id: prev.length + 1 }]);
    }
    setShowForm(false);
    setIsEditing(false);
    setFormAnnonce({
      id: 0,
      title: "",
      content: "",
      fullContent: "",
      author: "",
      date: new Date().toISOString().split("T")[0],
    });
  };

  const handleEditAnnonce = (annonce: Annonce) => {
    setFormAnnonce(annonce);
    setIsEditing(true);
    setShowForm(true);
  };

  return (
    <div className="max-w-6xl mx-auto p-6 bg-gray-100 min-h-screen">
      <h1 className="text-3xl font-bold text-center mb-6 text-blue-700">
        üì¢ Annonces
      </h1>

      {selectedAnnonce ? (
        <div>
          <button
            onClick={() => setSelectedAnnonce(null)}
            className="mb-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
          >
            ‚Üê Retour aux annonces
          </button>
          <AnnonceDetail
            title={selectedAnnonce.title}
            content={selectedAnnonce.fullContent}
            author={selectedAnnonce.author}
            date={selectedAnnonce.date}
          />
        </div>
      ) : (
        <>
          {/* <button
            onClick={() => setShowForm(true)}
            className="mb-4 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600"
          >
            + Ajouter une annonce
          </button>

          {showForm && (
            <div className="bg-white p-4 rounded shadow-md mb-6">
              <h2 className="text-2xl font-bold mb-4">
                {isEditing ? "Modifier l'annonce" : "Ajouter une annonce"}
              </h2>
              <input
                type="text"
                placeholder="Titre"
                value={formAnnonce.title}
                onChange={(e) =>
                  setFormAnnonce({ ...formAnnonce, title: e.target.value })
                }
                className="w-full p-2 border rounded mb-2"
              />
              <textarea
                placeholder="R√©sum√©"
                value={formAnnonce.content}
                onChange={(e) =>
                  setFormAnnonce({ ...formAnnonce, content: e.target.value })
                }
                className="w-full p-2 border rounded mb-2"
              />
              <textarea
                placeholder="Contenu d√©taill√©"
                value={formAnnonce.fullContent}
                onChange={(e) =>
                  setFormAnnonce({ ...formAnnonce, fullContent: e.target.value })
                }
                className="w-full p-2 border rounded mb-2"
              />
              <input
                type="text"
                placeholder="Auteur"
                value={formAnnonce.author}
                onChange={(e) =>
                  setFormAnnonce({ ...formAnnonce, author: e.target.value })
                }
                className="w-full p-2 border rounded mb-2"
              />
              <button
                onClick={handleAddOrUpdateAnnonce}
                className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600"
              >
                {isEditing ? "Modifier" : "Ajouter"}
              </button>
              <button
                onClick={() => {
                  setShowForm(false);
                  setIsEditing(false);
                }}
                className="ml-2 px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600"
              >
                Annuler
              </button>
            </div>
          )} */}

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 bg-white rounded shadow-md">
            {annonces.map((annonce) => (
              <div key={annonce.id} className="cursor-pointer p-4 ">
                <AnnonceCard
                  {...annonce}
                  onClick={() => setSelectedAnnonce(annonce)}
                />
                <div className="flex justify-end space-x-4 mt-2">
                  <a
                    href="#"
                    onClick={() => setSelectedAnnonce(annonce)}
                    className="text-blue-600 underline"
                  >
                    Voir plus
                  </a>
                </div>
              </div>
            ))}
          </div>
        </>
      )}
    </div>
  );
};

export default AnnonceList;
